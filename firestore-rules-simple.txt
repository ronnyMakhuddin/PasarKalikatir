rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ========================================
    // USERS COLLECTION - Permissive for logout
    // ========================================
    match /users/{userId} {
      // Allow read if user is reading their own profile OR if admin is reading any profile
      allow read: if request.auth != null && (
        request.auth.uid == userId ||
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin')
      );
      
      // Allow create if user is creating their own profile
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Allow update if user is updating their own profile OR if admin is updating any profile
      allow update: if request.auth != null && (
        request.auth.uid == userId ||
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin')
      );
      
      // Allow delete if admin is deleting any profile
      allow delete: if request.auth != null &&
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // ========================================
    // PRODUCTS COLLECTION - Permissive for logout
    // ========================================
    match /products/{productId} {
      // Anyone can read products (for public catalog)
      allow read: if true;
      
      // Allow create if user is verified seller or admin
      allow create: if request.auth != null && (
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'seller' &&
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isVerified == true) ||
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin')
      );
      
      // Allow update/delete if user is the product owner OR if admin
      allow update, delete: if request.auth != null && (
        resource.data.sellerId == request.auth.uid ||
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin')
      );
    }
    
    // ========================================
    // ORDERS COLLECTION - Permissive for logout
    // ========================================
    match /orders/{orderId} {
      // Allow read if user is verified seller or admin
      allow read: if request.auth != null && (
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'seller' &&
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isVerified == true) ||
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin')
      );
      
      // Anyone can create orders (customers don't need to be logged in)
      allow create: if true;
      
      // Allow update if user is verified seller or admin
      allow update: if request.auth != null && (
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'seller' &&
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isVerified == true) ||
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin')
      );
      
      // Allow delete if admin
      allow delete: if request.auth != null &&
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // ========================================
    // CATEGORIES COLLECTION - Permissive for logout
    // ========================================
    match /categories/{categoryId} {
      // Anyone can read categories
      allow read: if true;
      
      // Only admin can create/update/delete categories
      allow create, update, delete: if request.auth != null && 
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // ========================================
    // NOTIFICATIONS COLLECTION - Permissive for logout
    // ========================================
    match /notifications/{notificationId} {
      // Users can read their own notifications
      allow read: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      
      // Allow create if user is creating their own notification OR if admin
      allow create: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin')
      );
      
      // Allow update/delete if user is the notification owner OR if admin
      allow update, delete: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin')
      );
    }
    
    // ========================================
    // SETTINGS COLLECTION - Permissive for logout
    // ========================================
    match /settings/{settingId} {
      // Anyone can read settings
      allow read: if true;
      
      // Only admin can modify settings
      allow create, update, delete: if request.auth != null && 
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // ========================================
    // ANALYTICS COLLECTION - Permissive for logout
    // ========================================
    match /analytics/{analyticsId} {
      // Only admin can read/write analytics
      allow read, write: if request.auth != null && 
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // ========================================
    // BACKUP COLLECTION - Permissive for logout
    // ========================================
    match /backups/{backupId} {
      // Only admin can access backups
      allow read, write: if request.auth != null && 
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
  }
} 